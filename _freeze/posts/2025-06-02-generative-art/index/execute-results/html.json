{
  "hash": "3133fb1648961e4a85a43a8eb6679a58",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Generative Art\"\nauthor: \"Harshini Karthikeyan\"\ndate: '06-02-2025'\nformat:\n  html:\n    backgroundcolor: whitesmoke\n    monobackgroundcolor: lightsteelblue\n    fontcolor: black\n    number_sections: yes\n#mainfont: default\neditor: visual\ntoc: true\ntoc_float: true\nembed-resources: true\nimage: dashboard_preview.JPG\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggforce)\nlibrary(ambient)\nlibrary(MetBrewer)\nlibrary(metR)      \nlibrary(scales)  \nlibrary(colorspace)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris_art <- function(data = iris) {\n  \n  dat <- data %>%\n    #transform iris data into something that is plottable polarly\n    mutate(\n      x0 = (Sepal.Length - min(Sepal.Length)) / (max(Sepal.Length) - min(Sepal.Length)),\n      y0 = (Sepal.Width - min(Sepal.Width)) / (max(Sepal.Width) - min(Sepal.Width)),\n      x1 = x0 + (Petal.Length - min(Petal.Length)) / (max(Petal.Length) - min(Petal.Length)) * 0.3,\n      y1 = y0 + (Petal.Width - min(Petal.Width)) / (max(Petal.Width) - min(Petal.Width)) * 0.3,\n      size = Sepal.Length / max(Sepal.Length)\n    )\n  # green palette\n  paquin_pal <- met.brewer(\"Veronese\")[1:3]  \n  \n  ggplot(dat, aes(x = x0, y = y0, xend = x1, yend = y1, colour = Species, size = size)) +\n    geom_segment(lineend = \"round\", show.legend = FALSE) +\n    coord_polar() +\n    scale_colour_manual(values = paquin_pal) +\n    scale_size(range = c(0.5, 3)) +\n    theme_void()+\n    theme(plot.background = element_rect(fill = \"beige\", color = NA))\n}\n\niris_art()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nTitle: Twist of Iris\n\nAt first glance, Twist of Iris feels like a a flower frozen mid-spin, caught in the act of opening. But stare a little longer, and the lines start to echo something else, an iris of an eye.\n\nThis piece takes the iris dataset, with each segment built from sepal and petal measurements, \"twists\" into movement and direction. The use of the a green palette lends the composition a natural, organic feel, like petals dancing in sunlight, pollen drifting in the wind, or a person's eye. It plays with both meanings of “iris”(a flower and an eye ).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# generate each individual polygon\ngenerate_polygon <- function(center_x, center_y, radius, n_points) {\n  angles <- seq(0, 2 * pi, length.out = n_points + 1)[-1]\n  angles <- jitter(angles, amount = 0.2)\n  data.frame(\n    x = center_x + radius * cos(angles),\n    y = center_y + radius * sin(angles)\n  )\n}\n\npalette <- met.brewer(\"Ingres\", n = 9, type = \"continuous\")\n# blue gold palette\n\nset.seed(42)\nn_polygons <- 300\npolygon_data <- bind_rows(lapply(1:n_polygons, function(i) {\n  center_x <- runif(1, -10, 10)\n  center_y <- runif(1, -10, 10)\n  radius <- runif(1, 0.2, 0.4) # shape size\n  n_points <- sample(3:7, 1)\n  base_color <- sample(palette, 1)\n  \n  polygon <- generate_polygon(center_x, center_y, radius, n_points)\n  polygon$group <- i\n  polygon$fill <- base_color\n  polygon\n}))\n\nggplot(polygon_data, aes(x = x, y = y, group = group, fill = fill)) +\n  # added an edge line to the shapes\n  geom_shape(alpha = 0.8, radius = unit(0.1, 'cm'), color = \"#736545\", size = 0.1) +\n  coord_equal() +\n  theme_void() +\n  scale_fill_identity() +\n  theme(plot.background = element_rect(fill = \"black\", color = NA))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nTitle: Isolated Pebbles\n\nDescription:\n\nIsolated Pebbles presents scattered stones, each rendered in earthy tones with a stark black void-like background. The colors of the stones suggests they are grounded and along with the irregularity of shape reminds the viewer of pebbles one might find on a riverside. These anchor each shape firmly against the deep black background, suggesting they rest quietly on unseen soil.\n\nWhile some pebbles appear clustered, almost friends, a second look reveals that none truly touch. Even shapes that share similar colors and forms(as with traits that people have in common) remain separated by subtle distances, and are not groped together, suggesting an inherent solitude. This conveys how closeness does not always equate to connection, and similarity does not guarantee friendship. This also could suggest that there are many people like you out there you might yet to have find them though!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}